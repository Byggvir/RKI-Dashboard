#!/bin/bash

DEBUG=ON

# Color for output

red=`tput setaf 1`
green=`tput setaf 2`
blue=`tput setaf 4`
reset=`tput sgr0`

SEDDIR="$(dirname $0)/sed"

# List of download URL

DASHURL="https://www.arcgis.com/sharing/rest/content/items/f10774f1c63e40168479a1feb6c7ca74/data"
DASHURL2="https://download.byggvir.de/RKI/RKI-COVID19.csv.gz"

[ "$DEBUG" = "ON" ] && TEMP="/tmp/rki" || TEMP="/tmp/rki-$(date '+%F')"
[ ! -d  "${TEMP}" ] && mkdir "${TEMP}"

echo -e "\n\n${blue}+---------"
echo -e "| ${red}Tempoary file in: $TEMP"
echo -e "${blue}+---------${reset}\n\n"

DASHDEST="$TEMP/RKI-COVID19.csv"
DASHDESTA="$TEMP/A-RKI-COVID19.csv"
DASHDESTB="$TEMP/RKI-COVID19.csv.gz"

SQL="$TEMP/rki.sql"
GIT="$HOME/git/R/RKI-Dashboard/"

function download {

# Download table Fallzahlen_Kum_Tab and Testungen

[ ! -e "$DASHDESTB" ] && curl --output "$DASHDESTB" --url "$DASHURL2"

[   -e "$DASHDESTB" ] && gzip  --decompress "$DASHDESTB"

[ ! -e "$DASHDEST" ] && curl --output "$DASHDESTA" --url "$DASHURL"

[ ! -e $DASHDEST ] && ( cat "$DASHDESTA" || curl --url "$DASHURL" ) \
| sed 's#"\([0-9]\{2\}\)\.\([0-9]\{2\}\)\.\([0-9]\{4\}\).*"#\3-\2-\1#g; s# 00:00:00##g; s#/#-#g; s#,[^,]*$##' \
| sed 's#LK Göttingen (alt)#LK Göttingen#' \
> "$DASHDEST"

head -n 1 "$DASHDEST"

}

function dashboard {

# Importieren der Zahlen aus der Tabelle für das RKI Dashboard

    echo -e "\n\n${blue}+---------"
    echo -e "| ${red}Importieren der Tabelle für das Dashboard RKI in die Datenbank"
    echo -e "${blue}+---------${reset}\n\n" 

A=''
B=''

# ObjectId is sometimes in the first column sometime before Meldedatum

head -n 1 "$DASHDEST" | grep ',ObjectId'
if [ $? -eq 0 ]
then
    A=''
    B=', ObjectId INT'
else
    A='ObjectId INT ,'
    B=''
fi

( cat <<EOF
USE RKI;

DROP TABLE IF EXISTS Faelle;

CREATE TABLE IF NOT EXISTS Faelle (
    ${A} IdBundesland INT
    , Bundesland CHAR(32)
    , Landkreis CHAR(64)
    , Altersgruppe CHAR(7)
    , Geschlecht CHAR(1)
    , AnzahlFall INT
    , AnzahlTodesfall INT
      ${B}
    , Meldedatum DATE
    , IdLandkreis INT
    , Datenbestand DATE
    , NeuerFall INT 
    , NeuerTodesfall INT 
    , Refdatum DATE
    , NeuGenesen INT
    , AnzahlGenesen INT 
    , IstErkrankungsbeginn INT
    , PRIMARY KEY(ObjectId, Datenbestand));
    
ALTER TABLE Faelle ADD INDEX(IdBundesland);
ALTER TABLE Faelle ADD INDEX(IdLandkreis);
ALTER TABLE Faelle ADD INDEX(Meldedatum);
ALTER TABLE Faelle ADD INDEX(RefDatum);
ALTER TABLE Faelle ADD INDEX(Geschlecht);
ALTER TABLE Faelle ADD INDEX(Altersgruppe);

LOAD DATA LOCAL INFILE '$DASHDEST' 
    INTO TABLE Faelle 
    FIELDS TERMINATED BY ',' 
    IGNORE 1 ROWS;

   
DROP TABLE IF EXISTS Bundesland;

CREATE TABLE Bundesland ( 
    IdBundesland INT PRIMARY KEY
    , Bundesland CHAR(32)
    , INDEX (Bundesland));
    
DROP TABLE IF EXISTS Landkreis;

CREATE TABLE Landkreis ( 
    IdLandkreis INT PRIMARY KEY
    , Landkreis CHAR(64)
    , INDEX (Landkreis));
    
INSERT INTO Bundesland
SELECT DISTINCT IdBundesland, Bundesland
FROM Faelle;

INSERT INTO Landkreis
SELECT DISTINCT IdLandkreis, Landkreis
FROM Faelle;

ALTER TABLE Faelle DROP COLUMN Bundesland;
ALTER TABLE Faelle DROP COLUMN Landkreis;

SELECT max(Meldedatum), max(Datenbestand) FROM Faelle;  

EOF
) >> "$SQL"

}

rm "$SQL"
touch "$SQL"

download
dashboard

mysql --user=rscript --password=rscript < "$SQL"
